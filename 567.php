<?php
// 5 Что он выведет на каждом шаге? Почему?

class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
$a1 = new A();
$a2 = new A();
$a1->foo(); // 1
$a2->foo(); // 2
$a1->foo(); // 3
$a2->foo(); // 4

// Ответ: получится 1234, потому что счётчик находится внутри метода одного класса

// 6 Объясните результаты в этом случае.

//class A {
//    public function foo() {
//        static $x = 0;
//        echo ++$x;
//    }
//}
//class B extends A {
//}
//$a1 = new A();
//$b1 = new B();
//$a1->foo(); // 1
//$b1->foo(); // 1
//$a1->foo(); // 2
//$b1->foo(); // 2

// Ответ: получится 1122, потому что здесь присутствует два статичных счётчика, которые считают каждый
// по своему классу отдельно

// 7 Что он выведет на каждом шаге? Почему?

//class A {
//    public function foo() {
//        static $x = 0;
//        echo ++$x;
//    }
//}
//class B extends A {
//}
//$a1 = new A;
//$b1 = new B;
//$a1->foo();
//$b1->foo();
//$a1->foo();
//$b1->foo();

// Задание повторяется с предыдущим




?>